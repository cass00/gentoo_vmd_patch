 vmd-1.9.2/bin/vmd.sh   |  3 ++
 vmd-1.9.2/configure    | 88 +++++++++++++++++++-------------------------------
 vmd-1.9.2/src/Makefile |  6 +---
 3 files changed, 37 insertions(+), 60 deletions(-)

diff --git a/vmd-1.9.2/bin/vmd.sh b/vmd-1.9.2/bin/vmd.sh
old mode 100755
new mode 100644
index 5d27f19..2727292
--- a/vmd-1.9.2/bin/vmd.sh
+++ b/vmd-1.9.2/bin/vmd.sh
@@ -403,6 +403,7 @@ esac
 
 # set the path to a few external programs
 # Stride -- used to generate cartoon representations etc.
+export STRIDE_BIN="gentoo-stride"
 if [ -z "$STRIDE_BIN" ]
 then
   if [ -x "$MASTERVMDDIR/stride_$ARCH" ]
@@ -413,6 +414,7 @@ then
 fi
 
 # Surf -- used to generate molecular surfaces
+export SURF_BIN="gentoo-surf"
 if [ -z "$SURF_BIN" ]
 then
   if [ -x "$MASTERVMDDIR/surf_$ARCH" ]
@@ -423,6 +425,7 @@ then
 fi
 
 # Tachyon -- used to generate ray traced graphics
+export TACHYON_BIN="gentoo-tachyon"
 if [ -z "$TACHYON_BIN" ]
 then
   if [ -x "$MASTERVMDDIR/tachyon_$ARCH" ]
diff --git a/vmd-1.9.2/configure b/vmd-1.9.2/configure
old mode 100755
new mode 100644
index 6865464..6fc52d8
--- a/vmd-1.9.2/configure
+++ b/vmd-1.9.2/configure
@@ -13,10 +13,10 @@
 $install_name = "vmd";
 
 # Directory where VMD startup script is installed, should be in users' paths.
-$install_bin_dir="/usr/local/bin";
+$install_bin_dir="gentoo-bindir";
 
 # Directory where VMD files and executables are installed
-$install_library_dir="/usr/local/lib/$install_name";
+$install_library_dir="gentoo-libdir/$install_name";
 
 
 # optionally override hard-coded defaults above with environment variables
@@ -134,28 +134,6 @@ if ($ENV{VMDINSTALLLIBRARYDIR}) {
 # Configure script code begins here
 ############################################################################
 
-## Test for existence of a properly compiled plugin tree
-if (!(-e "plugins")) {
-  print "\n";
-  print "VMD plugin directory not found.\n";
-  print "Please compile the VMD plugins and do 'make distrib' to copy them\n";
-  print "into a 'plugins' directory linked or located in this directory.\n";
-  print "Be sure your PLUGINDIR environment variable is set before running\n";
-  print "'make distrib' in the plugin build area.\n";
-  print "\n";
-  die "Halting configuration until VMD plugins are built.\n";
-} else {
-  if (!(-e "plugins/include/vmdplugin.h")) {
-    print "\n";
-    print "VMD plugin include files or directory not found.\n";
-    print "Please compile the VMD plugins and do 'make distrib' to copy them\n";
-    print "into a 'plugins' directory linked or located in this directory.\n";
-    print "Be sure your PLUGINDIR environment variable is set before running\n";
-    print "'make distrib' in the plugin build area.\n";
-    print "\n";
-    die "Halting configuration until VMD plugins are built.\n";
-  }
-} 
 
 #################### Parse command line options   ###########
 # list of allowed architectures
@@ -444,7 +422,7 @@ $arch_rcflags     = "No resource compiler required on this platform.";
 
 $arch_cc          = "cc";
 $arch_ccpp        = "CC";
-$arch_nvcc        = "/usr/local/encap/cuda-4.0/bin/nvcc";
+$arch_nvcc        = "gentoo-nvcc";
 $arch_nvccflags   = "--ptxas-options=-v " . 
                     "-gencode arch=compute_10,code=sm_10 " .
                     "-gencode arch=compute_13,code=sm_13 " .
@@ -483,7 +461,7 @@ chop($arch_no_math_float);
 
 ################ Plugin options
 #
-$plugin_dir	= "../plugins";
+$plugin_dir	= "gentoo-plugindir";
 $plugin_include = "-I$plugin_dir/include";
 $plugin_library = "";
 $plugin_libs    = "";
@@ -496,7 +474,7 @@ $plugin_defines = "";
 @plugin_extra   = ();
 
 if ($config_staticplugin) {
-  $molfile_dir = "$plugin_dir/$config_arch/molfile";
+  $molfile_dir = "$plugin_dir/compile/lib_LINUX/molfile";
   $plugin_include .= " -I$molfile_dir";
   $plugin_library .= " -L$molfile_dir";
   $plugin_libs    .= " -lmolfile_plugin";
@@ -620,8 +598,8 @@ $fltkopengl_defines     = "-DVMDOPENGL -DVMDFLTKOPENGL";
 ################ FLTK GUI
 $fltk_defines     = "-DVMDGUI -DVMDFLTK";
 $fltk_dir         = "$vmd_library_dir/fltk";
-$fltk_include     = "-I$fltk_dir/include";
-$fltk_library     = "-L$fltk_dir/$config_arch";
+$fltk_include     = "-Igentoo-fltk-include";
+$fltk_library     = "-Lgentoo-fltk-libs";
 $fltk_libs        = "-lfltk -lX11";
 #@fltk_cc          = ('forms_ui.c');
 @fltk_cu          = ();
@@ -682,8 +660,8 @@ $tcl_include      = "-I$stock_tcl_include_dir";
 if ($config_tk) { $tcl_include .= " -I$stock_tk_include_dir"; }
 $tcl_library      = "-L$stock_tcl_library_dir";
 if ($config_tk) { $tcl_library .= " -L$stock_tk_library_dir"; }
-$tcl_libs         = "-ltcl8.5";  
-if ($config_tk) { $tcl_libs = "-ltk8.5 -lX11 " . $tcl_libs; }
+$tcl_libs         = "-ltcl";
+if ($config_tk) { $tcl_libs = "-ltk -lX11 " . $tcl_libs; }
 
 @tcl_cc           = ();
 @tcl_cu           = ();
@@ -1156,8 +1134,8 @@ $actc_libs        = "-lactc";
 #######################
 $netcdf_defines     = "";
 $netcdf_dir         = "$vmd_library_dir/netcdf";
-$netcdf_include     = "-I$netcdf_dir/include";
-$netcdf_library     = "-L$netcdf_dir/lib_$config_arch";
+$netcdf_include     = "-Igentoo-netcdf-include";
+$netcdf_library     = "-Lgentoo-netcdf-libs";
 $netcdf_libs        = "-lnetcdf";
 @netcdf_cc          = ();
 @netcdf_cu          = ();
@@ -1228,6 +1206,7 @@ $pthreads_libs     = "-lpthread";
 #$stock_python_library_dir=$ENV{"PYTHON_LIBRARY_DIR"} || "/usr/local/lib";
 $stock_python_include_dir=$ENV{"PYTHON_INCLUDE_DIR"} || "$vmd_library_dir/python/lib_$config_arch/include/python2.5";
 $stock_python_library_dir=$ENV{"PYTHON_LIBRARY_DIR"} || "$vmd_library_dir/python/lib_$config_arch/lib/python2.5/config";
+$stock_python_library=$ENV{"PYTHON_LIBRARY"} || "$vmd_library_dir/python/lib_$config_arch/lib/python2.5/config";
 
 #$stock_numpy_include_dir=$ENV{"NUMPY_INCLUDE_DIR"} || "/usr/local/include";
 #$stock_numpy_library_dir=$ENV{"NUMPY_LIBRARY_DIR"} || "/usr/local/lib";
@@ -1237,7 +1216,7 @@ $stock_numpy_library_dir=$ENV{"NUMPY_LIBRARY_DIR"} || "$vmd_library_dir/python/l
 $python_defines     = "-DVMDPYTHON";
 $python_include     = "-I$stock_python_include_dir -I$stock_numpy_include_dir -I$stock_numpy_library_dir";
 $python_library     = "-L$stock_python_library_dir";
-$python_libs        = "-lpython2.5 -lpthread";
+$python_libs        = "$stock_python_library -lpthread";
 @python_h           = ('PythonTextInterp.h',
                        'VMDTkinterMenu.h',
 		       'py_commands.h',
@@ -2068,8 +2047,8 @@ if ($config_arch eq "LINUX") {
 
     # XFree 4.0 Direct Rendering Interface and GLX 
     $opengl_dep_dir         = "/usr/X11R6";
-    $opengl_dep_include     = "-I$opengl_dep_dir/include";
-    $opengl_dep_library     = "-L$opengl_dep_dir/lib";
+    $opengl_dep_include     = "-Igentoo-opengl-include";
+    $opengl_dep_library     = "-Lgentoo-opengl-libs";
     $opengl_dep_libs        = "-lGL -lGLU"; 
     # $opengl_dep_libs      = "-L/usr/X11R6/lib -lGL -lGLU -lXext -lX11";
 
@@ -2097,15 +2076,15 @@ if ($config_arch eq "LINUX") {
       $arch_lopts       .= "-i-static ";
     } else {
       # compling with GCC
-      $arch_cc          = "gcc";
-      $arch_ccpp        = "g++";
+      $arch_cc          = "gentoo-gcc";
+      $arch_ccpp        = "gentoo-g++";
       $arch_depend_flag = "-MM";
-      $arch_shld        = "g++ -shared";
+      $arch_shld        = "gentoo-g++ -shared";
       $arch_shlibname   = "so";
       $arch_shcppopts   = "-fPIC";
-      $arch_shldopts    = "";
-      $arch_opt_flag    = "-m32 -fno-for-scope -Wno-deprecated -Wall -O3";
-      $arch_copts       = "-m32 -Wall -O3";
+      $arch_shldopts    = "gentoo-ldflags";
+      $arch_opt_flag    = "gentoo-cflags";
+      $arch_copts       = "gentoo-cflags";
 
       if ($config_static) {
         $arch_lopts       = "-static";
@@ -2123,8 +2102,8 @@ if ($config_arch eq "LINUX") {
 
     $arch_cppopts     = "";
     if ($config_cuda) {
-      $arch_nvccflags .= " --machine 32 -O3 -Xcompiler \"-m32\" $cuda_include";
-      $cuda_library     = "-L/usr/local/encap/cuda-4.0/lib";
+      $arch_nvccflags .= "gentoo-nvflags $cuda_include";
+      $cuda_library     = "-Lgentoo-cuda-lib";
     }
     # a hack - to be removed, just keeps make happy
     $arch_template_repository = "foobar";
@@ -2214,7 +2193,7 @@ if ($config_arch eq "LINUXAMD64") {
       $arch_template_repository = "foobar";
       $arch_shlibname   = "so";
       $arch_shcppopts   = "-fPIC";
-      $arch_shldopts    = "";
+      $arch_shldopts    = "gentoo-ldflags";
 
       if ($config_static) {
         # link everything statically (this won't work due to libGL issues)
@@ -2245,7 +2224,7 @@ if ($config_arch eq "LINUXAMD64") {
 
     if ($config_cuda) {
       $arch_nvccflags   .= " --machine 64 -O3 $cuda_include";
-      $cuda_library     = "-L/usr/local/encap/cuda-4.0/lib64";
+      $cuda_library     = "-Lgentoo-cuda-lib";
     }
 
     $arch_lex		= "flex"; # has problems with vendor lex
@@ -2638,7 +2617,7 @@ if ($config_arch eq "MACOSXX86" || $config_arch eq "MACOSXX86_64") {
       } else {
         $arch_nvccflags   .= " --machine 32 -O3 $cuda_include";
       }
-      $cuda_library     = "-L/usr/local/cuda/lib";
+      $cuda_library     = "-Lgentoo-cuda-lib";
     }
     if ($config_opencl) {
       $opencl_libs        = "-framework OpenCL";
@@ -2829,7 +2808,7 @@ if ($config_arch eq "SOLARISX86" || $config_arch eq "SOLARISX86_64") {
           $arch_nvcc        = "/usr/local/cuda/bin/nvcc";
           $arch_nvccflags   .= " -m64 -O3 -I/usr/local/cuda/include";
           $cuda_libs        = "-lcudart";
-          $cuda_library     = "-L/usr/local/cuda/lib";
+          $cuda_library     = "-Lgentoo-cuda-lib";
         }
       } else {
         print "Configured for a 32-bit build.\n";
@@ -3220,11 +3199,11 @@ LIBDIRS     = $LIBDIRS
 DEFINES     = $DEFINES
 
 # compiler and compiler directives 
-CC          = $arch_cc
-CFLAGS      = $arch_copts -DARCH_$config_arch \$(DEFINES) \$(INCDIRS) $rpm_optflags
+CC          = gentoo-gcc
+CFLAGS      = gentoo-cflags -DARCH_$config_arch \$(DEFINES) \$(INCDIRS) $rpm_optflags
 
-CCPP	    = $arch_ccpp
-CPPFLAGS    = $arch_opt_flag $arch_cppopts -DARCH_$config_arch \$(DEFINES) \$(INCDIRS) $rpm_optflags
+CCPP	    = gentoo-g++
+CPPFLAGS    = gentoo-cxxflags $arch_cppopts -DARCH_$config_arch \$(DEFINES) \$(INCDIRS) $rpm_optflags
 
 NVCC        = $arch_nvcc
 NVCCFLAGS   = $arch_nvccflags -DARCH_$config_arch \$(DEFINES) \$(INCDIRS)
@@ -3276,7 +3255,7 @@ $config_progname: y.tab.h \$(VMD_OBJS) \$(VMD_PTX)
 	if [ ! -r ./$arch_template_repository ]; then \\
 	  ln -s $vmd_src_dir/$arch_template_repository ./$arch_template_repository ; \\
 	fi; \\
-	\$(CCPP) \$(CPPFLAGS) -I$vmd_src_dir -o \$\@ \$(VMD_OBJS) \$(LOADLIBES) ; 
+	\$(CCPP) \$(LDFLAGS) \$(CPPFLAGS) -I$vmd_src_dir -o \$\@ \$(VMD_OBJS) \$(LOADLIBES) ; 
 	\$(COMPILERC) \$(RCFLAGS)
 
 install:
@@ -3317,8 +3296,7 @@ install:
 	-\$(COPY) ../data/.vmdrc ../data/.vmdsensors ../data/vmd_completion.dat "$install_library_dir"
 	\$(CD) $vmd_bin_dir ; \\
 	if [ -f run_vmd_tmp ]; then \$(DELETE) run_vmd_tmp; fi ; \\
-	if [ ! -x "/bin/csh" ]; then \\
-		\$(ECHO) "Info: /bin/csh shell not found, installing Bourne shell startup script instead" ; \\
+	if [ -x "/bin/bash" ]; then \\
 		\$(ECHO) '#!/bin/sh' >> run_vmd_tmp ; \\
 		\$(ECHO) 'defaultvmddir="$install_library_dir"' >> run_vmd_tmp ; \\
 		\$(ECHO) 'vmdbasename=vmd' >> run_vmd_tmp ; \\
diff --git a/vmd-1.9.2/src/Makefile b/vmd-1.9.2/src/Makefile
index 0e3a25f..97d1d30 100644
--- a/vmd-1.9.2/src/Makefile
+++ b/vmd-1.9.2/src/Makefile
@@ -509,7 +509,7 @@ vmd_LINUXAMD64: y.tab.h $(VMD_OBJS) $(VMD_PTX)
 	if [ ! -r ./foobar ]; then \
 	  ln -s ../src/foobar ./foobar ; \
 	fi; \
-	$(CCPP) $(CPPFLAGS) -I../src -o $@ $(VMD_OBJS) $(LOADLIBES) ; 
+	$(CCPP) $(LDFLAGS) $(CPPFLAGS) -I../src -o $@ $(VMD_OBJS) $(LOADLIBES) ; 
 	$(COMPILERC) $(RCFLAGS)
 
 install:
@@ -522,10 +522,6 @@ install:
 	if [ ! -d "/usr/local/lib/vmd"/doc ]; then \
 		$(MAKEDIR) "/usr/local/lib/vmd"/doc; \
 	fi
-	-$(COPY) ../Announcement  "/usr/local/lib/vmd"
-	-$(COPY) ../README        "/usr/local/lib/vmd"
-	-$(COPY) ../LICENSE       "/usr/local/lib/vmd"
-	-$(COPY) ../doc/ug.pdf        "/usr/local/lib/vmd"/doc
 	if [ -f /usr/local/lib/vmd/vmd_LINUXAMD64 ]; then \
            $(MOVE) "/usr/local/lib/vmd/vmd_LINUXAMD64" "/usr/local/lib/vmd/OLD_vmd_LINUXAMD64" ; $(DELETE) "/usr/local/lib/vmd/OLD_vmd_LINUXAMD64" ; fi
 	-$(COPY) ../LINUXAMD64/vmd_LINUXAMD64 "/usr/local/lib/vmd"
